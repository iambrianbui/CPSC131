#ifndef COORD
#define COORD

#include<iostream>
#include<cmath>

using namespace std;

class POINT{
private:
	int x, y;
public:
	void insertCoordinates(int, int);
	void displayCoordinates();
	friend void operator + (POINT, POINT);
	friend void operator - (POINT, POINT);
	friend void operator * (POINT, int);
	friend float midPoint(POINT, POINT);

};

void POINT::insertCoordinates(int a, int b){
	x = a;
	y = b;
}

void POINT::displayCoordinates(){
	cout << "(" << x << ", " << y << ") ";
}

void operator + (POINT a, POINT b){
	POINT c;
	c.x = a.x + b.x;
	c.y = a.y + b.y;

	cout << "A(" << a.x << ", " << a.y << ") + B(" << b.x << ", " << b.y << ") = C(" << c.x << ", " << c.y << ")" << endl;

}

void operator - (POINT a, POINT b){
	POINT c;
	c.x = a.x - b.x;
	c.y = a.y - b.y;

	cout << "A(" << a.x << ", " << a.y << ") - B(" << b.x << ", " << b.y << ") = C(" << c.x << ", " << c.y << ")" << endl;

}

void operator * (POINT a, int x){
	POINT c;
	c.x = x*a.x;
	c.y = x*a.y;
	cout << "C(" << c.x << ", " << c.y << ") " << endl;
}

float midPoint(POINT a, POINT b){
	float distance;
	distance = pow((b.x - a.x), 2) + pow((b.y - a.y), 2);
	distance = sqrt(distance);

	return distance;


}
#endif

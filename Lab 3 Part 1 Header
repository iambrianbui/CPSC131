#ifndef Record
#define Record
#include <iostream>
#include <fstream>

using namespace std;

template <int INDEX>
class THREE{
private:  struct RECORD{
	char name[20];
	int age;
	float gpa;
};
		  RECORD a[INDEX];

public:  void copyData(string fname);
		 void displayAll();
		 int findAgeAverage();
		 void findGpaAve(float& gpaAve);
		 void displayAverages(int ageAve, float gpaAve);
		 void displayNameAboveGpa(float gpaAve);
		 void displayHighGpaNames();
		 void displayOldestName();
		 ~THREE(){};
};


template <int INDEX>
void THREE<INDEX>::copyData(string fname)
{
	fstream f;
	f.open(fname, ios::in);
	string line;
	
		for (int i = 0; i < INDEX; i++){
			f.get(a[i].name, 20);
			f >> a[i].age >> a[i].gpa;
			getline(f, line);
		}
		f.close();
	
}

template <int INDEX>
void THREE<INDEX>::displayAll(){
	for (int i = 0; i < INDEX; i++){
		cout << a[i].name << '\t' << a[i].age << '\t' << a[i].gpa << endl;
	}
}

template <int INDEX>
int THREE<INDEX>::findAgeAverage(){
	int ageAverage = 0;

	for (int i = 0; i < INDEX; i++){
		ageAverage += a[i].age;
	}
	ageAverage /= INDEX;

	return ageAverage;
}

template <int INDEX>
void THREE<INDEX>::findGpaAve(float& gpaAve){
	for (int i = 0; i < INDEX; i++)
		gpaAve += a[i].gpa;
	gpaAve /= INDEX;

}

template <int INDEX>
void THREE<INDEX>::displayAverages(int ageAve, float gpaAve){
	cout << "Their age average is:  " << ageAve << endl
		<< "Their GPA average is:  " << gpaAve << endl;
}

template <int INDEX>
void THREE<INDEX>::displayNameAboveGpa(float gpaAve){
	cout << "People above the GPA average:  " << endl;
	for (int i = 0; i < INDEX; i++)  //  simple for loop
	{
		if (a[i].gpa > gpaAve)  //  check for average
		{
			cout << a[i].name << endl;
		}
	}
}

template <int INDEX>
void THREE<INDEX>::displayHighGpaNames(){
	int highestIndex = 0;
	for (int i = 0; i < INDEX; i++){
		if (a[highestIndex].gpa < a[i].gpa)
			highestIndex = i;
	}
	cout << "The people with the highest GPA are:  ";
	for (int i = 0; i < INDEX; i++){
		if (a[i].gpa == a[highestIndex].gpa)
		cout << '\t' << a[i].name;

	}
	cout << endl;
}

template <int INDEX>
void THREE<INDEX>::displayOldestName(){
	int highestIndex = 0;
	for (int i = 0; i < INDEX; i++){
		if (a[highestIndex].age < a[i].age)
			highestIndex = i;
	}
	cout << "The oldest people are:  ";
	for (int i = 0; i < INDEX; i++){
		if (a[i].age == a[highestIndex].age)
			cout << '\t' << a[i].name;

	}
	cout << endl;
}



#endif
